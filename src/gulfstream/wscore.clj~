(ns go.core
  (:gen-class)
  (:import (java.net ServerSocket Socket SocketException)
           (java.io InputStreamReader OutputStream
                    OutputStreamWriter PrintWriter BufferedReader))
  (:require [clojure.core.async :refer :all]))


(defn -main
  "I don't do a whole lot ... yet."
  [& args]
  (println "Hello, World!"))

(declare server peek!)
(def ds (chan(sliding-buffer 100)))
(def ss (ServerSocket. 8000))
(server ss)

(prn (peek! ds 20))
(.close ss)

;;;
(defn- peek! [ch & args]
  (if-not (nil? args)
    (let [s (remove nil? (repeatedly (first args) #(peek! ch)))] (if-not (empty? s) s nil))
    (let [[m ch] (alts!! [ch (timeout 1)])] m)))

(defn- send! [out data]
     (doto out
       (.println data)
       (.flush)))

(defn- listen! [cs ss]
  (let [ins (.getInputStream cs)
        in (BufferedReader. (InputStreamReader. ins))
        bins (java.io.BufferedInputStream. ins)
        buf (make-array Byte/TYPE 1024)
        out (PrintWriter. (.getOutputStream cs))]
  (loop []
    (if (> (.available ins) 0)
      (.read bins buf))
    (go(>! ds (apply str (map #(char (bit-and % 255))buf))))
    (if (.isClosed ss)
      (.close cs))
    (if-not (.isClosed cs)
      (recur)))))

(defn server [^ServerSocket ss] 
  (thread 
    (loop []
      (if-let [cs (.accept ss)]
        (go(listen! cs ss)))
      (if-not (.isClosed ss) (recur)))))


;      (let [line (.readLine in)]
;        (if (= "GET / HTTP/1.1" line)
;          (loop [n 1
;                 hl (slurp in)];(.readLine in)] 
;            (go(>! ds hl))
;            (if (= "Upgrade: websocket" hl)
;              (do(go(>! ds "websocket!"))
               ;  (loop [hl (.readLine in)
                ;        n 1]
                 ;  (if (.startsWith "Sec-WebSocket-Key:" hl)
                  ;   (go(>! ds (second (split hl))))
                   ;  (if (< n 3) (recur (inc n) (.readLine in))))))
;              (if (< n 3) (recur (inc n) (.readLine in))))))
;          (go(>! ds (.readLine in))))))
        ;(if (= "Upgrade: websocket" line)
        ;  (send! out "Connection: Upgrade"))
        ;(if (= "Upgrade: websocket" line)
         ; (send! "Connection: Upgrade"))
       ; (go(>! ds line))))

